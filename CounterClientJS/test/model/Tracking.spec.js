/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenapiJsClient);
  }
}(this, function(expect, OpenapiJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenapiJsClient.Tracking();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Tracking', function() {
    it('should create an instance of Tracking', function() {
      // uncomment below and update the code to test Tracking
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be.a(OpenapiJsClient.Tracking);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customerId")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property clientIP (base name: "clientIP")', function() {
      // uncomment below and update the code to test the property clientIP
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property platform (base name: "platform")', function() {
      // uncomment below and update the code to test the property platform
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property docDatabase (base name: "docDatabase")', function() {
      // uncomment below and update the code to test the property docDatabase
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property trackingEvent (base name: "trackingEvent")', function() {
      // uncomment below and update the code to test the property trackingEvent
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property trackingDate (base name: "trackingDate")', function() {
      // uncomment below and update the code to test the property trackingDate
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property documentId (base name: "documentId")', function() {
      // uncomment below and update the code to test the property documentId
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property documentUrl (base name: "documentUrl")', function() {
      // uncomment below and update the code to test the property documentUrl
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property documentTitle (base name: "documentTitle")', function() {
      // uncomment below and update the code to test the property documentTitle
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property chapter (base name: "chapter")', function() {
      // uncomment below and update the code to test the property chapter
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property author (base name: "author")', function() {
      // uncomment below and update the code to test the property author
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property publisher (base name: "publisher")', function() {
      // uncomment below and update the code to test the property publisher
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property accessMethod (base name: "accessMethod")', function() {
      // uncomment below and update the code to test the property accessMethod
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property accessType (base name: "accessType")', function() {
      // uncomment below and update the code to test the property accessType
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property dataType (base name: "dataType")', function() {
      // uncomment below and update the code to test the property dataType
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property sectionType (base name: "sectionType")', function() {
      // uncomment below and update the code to test the property sectionType
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property reportType (base name: "reportType")', function() {
      // uncomment below and update the code to test the property reportType
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property yop (base name: "yop")', function() {
      // uncomment below and update the code to test the property yop
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property sessionId (base name: "sessionId")', function() {
      // uncomment below and update the code to test the property sessionId
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new OpenapiJsClient.Tracking();
      //expect(instance).to.be();
    });

  });

}));
